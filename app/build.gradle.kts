/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("java")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    // testImplementation(libs.junit.jupiter)

    // testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("com.google.guava:guava:30.1-jre")
   
    //mine
    // implementation("org.nocrala.tools.texttablefmt:text-table-formatter:1.2.4")
    // implementation("com.massisframework:j-text-utils:0.3.4")
    // compile group: 'com.massisframework', name: 'j-text-utils', version: '0.3.4'

    // implementation("org.apache.commons:commons-text:1.11.0")

testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.homies.App"
    
}


tasks.jar {
    manifest {
        attributes["Main-Class"] = "org.homies.App"
    }
}


tasks.test {
	useJUnitPlatform()
	testLogging {
		events("passed", "skipped", "failed")
	}
}

tasks.named<JavaExec>("run") {
    standardInput = System.`in`
}
